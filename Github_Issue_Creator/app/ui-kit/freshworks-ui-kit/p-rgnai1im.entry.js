import{r as t,h as i}from"./p-f87cf4ae.js";const s=class{constructor(i){t(this,i),this.timeValues=[],this.hourFormat="hh:mm p",this.isMeridianFormat="hh:mm p"===this.hourFormat,this.interval=30,this.minTime=this.isMeridianFormat?"12:00 AM":"00:00",this.maxTime=this.isMeridianFormat?"11:30 PM":"23:30",this.setTimeValues=()=>{let t=this.minTimeObj.timeInMinutes;do{const i=this.getTimeInMeridian(t);this.timeValues.push({timeInMinutes:t,label:{meridian:i,nonMeridian:this.getTimeInNonMeridian(i)}}),t+=this.interval}while(t<=this.maxTimeObj.timeInMinutes)}}isPrimaryMeridian(t){return t.includes("PM")}padZeroToTime(t,i){let s=`${t}`,e=`${i}`;return t<10&&(s=`0${t}`),i<10&&(e=`0${i}`),`${s}:${e}`}getHoursMinutes(t){const i=t.split(":");return{hours:Number(i[0]),mins:Number(i[1].split(" ")[0])}}getTimeInMeridian(t){let i=Math.floor(t/60);const s=t%60;return i>=12?`${this.padZeroToTime(i=12===i?i:i-12,s)} PM`:(0===i&&(i+=12),`${this.padZeroToTime(i,s)} AM`)}getTimeInNonMeridian(t){let{hours:i}=this.getHoursMinutes(t);const{mins:s}=this.getHoursMinutes(t);return this.isPrimaryMeridian(t)?(12!==i&&(i+=12),this.padZeroToTime(i,s)):(12===i&&(i-=12),this.padZeroToTime(i,s))}getTimeInMins(t){const i=this.getTimeInNonMeridian(t),{hours:s,mins:e}=this.getHoursMinutes(i);return 60*s+e}setMinMaxTimeObjs(){this.minTimeObj={timeInMinutes:this.getTimeInMins(this.minTime),nonMeridianTime:this.getTimeInNonMeridian(this.minTime)},this.maxTimeObj={timeInMinutes:this.getTimeInMins(this.maxTime),nonMeridianTime:this.getTimeInNonMeridian(this.maxTime)}}currentTimeLabel(t){return this.isMeridianFormat?t.label.meridian:t.label.nonMeridian}currentTimeValue(t){return t.label.nonMeridian}setTimeValue(t){const{value:i}=t.detail;this.timeValue=i}componentWillLoad(){this.setMinMaxTimeObjs(),this.setTimeValues()}render(){return i("fw-select",{onFwChange:this.setTimeValue},this.timeValues.map(t=>i("fw-select-option",{value:this.currentTimeValue(t)},this.currentTimeLabel(t))))}};export{s as fw_timepicker};